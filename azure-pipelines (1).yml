# .NET Core Web App to Windows on Azure
# Build a .NET Core Web App and deploy it to Azure as a Windows Web App.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '002abe73-455f-4cfd-b150-64b5cd596fc9'

  # Web App name
  webAppName: 'kandulawebsite'

  # Agent VM image name
  vmImageName: 'vs2017-win2016'

  # Working Directory
  workingDirectory: '.'

  # Build Configuration
  buildConfiguration: 'Release'

  # Build Projects
  buildProjects: "**/*.csproj"

  # Test Projects
  testProjects: "**/*[Tt]est*/*.csproj"

  # Dotnet Core Version
  dotnetCoreVersion: 2.x

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: $(dotnetCoreVersion)

    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: 'restore'
        publishWebProjects: true
        projects: $(buildProjects)

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: $(buildProjects)
        arguments: --configuration $(buildConfiguration)

    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: 'test'
        projects: $(testProjects)
        publishWebProjects: true
        arguments: --configuration $(buildConfiguration)

    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)
        zipAfterPublish: true

    - publish: $(Build.ArtifactStagingDirectory)
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(webAppName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App: $(webAppName)'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webApp
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/**/*.zip